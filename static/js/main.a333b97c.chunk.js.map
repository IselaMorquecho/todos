{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","TodoItem/index.js","CreateTodoButton/index.js","Modal/index.js","Form/index.js","Loading/MyLoader.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","completeTodo","todoIndex","indexOf","newTodos","deleteTodo","splice","addTodo","push","children","TodoCounter","useContext","Fragment","className","TodoSearch","placeholder","onChange","event","target","TodoList","TodoItem","type","checked","onComplete","IconButton","onClick","onDelete","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","rows","MyLoader","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","AppUI","Consumer","map","App","render"],"mappings":"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","file":"static/js/main.a333b97c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useLocalStorage } from './useLocalStorage';\r\n\r\nconst TodoContext = React.createContext();\r\n\r\nfunction TodoProvider(props) {\r\n    const {\r\n        item: todos,\r\n        saveItem: saveTodos,\r\n        loading,\r\n        error,\r\n    } = useLocalStorage('TODOS_V1', []);\r\n    const [searchValue, setSearchValue] = React.useState('');\r\n    const [openModal, setOpenModal] = React.useState(false);\r\n\r\n    const completedTodos = todos.filter(todo => !!todo.completed).length;\r\n    const totalTodos = todos.length;\r\n\r\n    let searchedTodos = [];\r\n\r\n    if (!searchValue.length >= 1) {\r\n        searchedTodos = todos;\r\n    } else {\r\n        searchedTodos = todos.filter(todo => {\r\n            const todoText = todo.text.toLowerCase();\r\n            const searchText = searchValue.toLowerCase();\r\n            return todoText.includes(searchText);\r\n        });\r\n    }\r\n\r\n    const completeTodo = (todo) => {\r\n        const todoIndex = todos.indexOf(todo);\r\n        const newTodos = [...todos];\r\n        newTodos[todoIndex].completed = !newTodos[todoIndex].completed;\r\n        saveTodos(newTodos);\r\n    };\r\n\r\n    const deleteTodo = (todo) => {\r\n        const todoIndex = todos.indexOf(todo);\r\n        const newTodos = [...todos];\r\n        newTodos.splice(todoIndex, 1);\r\n        saveTodos(newTodos);\r\n    };\r\n\r\n    const addTodo = (text) => {\r\n        const newTodos = [...todos];\r\n        newTodos.push({\r\n            completed: false,\r\n            text\r\n        });\r\n        saveTodos(newTodos);\r\n    };\r\n\r\n    return (\r\n        <TodoContext.Provider value={{\r\n            loading,\r\n            error,\r\n            totalTodos,\r\n            completedTodos,\r\n            searchValue,\r\n            setSearchValue,\r\n            searchedTodos,\r\n            completeTodo,\r\n            deleteTodo,\r\n            addTodo,\r\n            openModal,\r\n            setOpenModal\r\n        }}>\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    );\r\n}\r\n\r\nexport { TodoContext, TodoProvider };","import React from 'react';\r\n\r\nfunction useLocalStorage(itemName, initialValue) {\r\n    const [error, setError] = React.useState(false);\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [item, setItem] = React.useState(initialValue);\r\n\r\n    React.useEffect(() => {\r\n        setTimeout(() => {\r\n            try {\r\n                const localStorageItem = localStorage.getItem(itemName);\r\n                let parsedItem;\r\n\r\n                if (!localStorageItem) {\r\n                    localStorage.setItem(itemName, JSON.stringify(initialValue));\r\n                    parsedItem = initialValue;\r\n                } else {\r\n                    parsedItem = JSON.parse(localStorageItem);\r\n                }\r\n\r\n                setItem(parsedItem);\r\n                setLoading(false);\r\n            } catch(error) {\r\n                setError(error);\r\n            }\r\n        }, 1000);\r\n    },[]);\r\n\r\n    const saveItem = (newItem) => {\r\n        try {\r\n            const stringifiedItem = JSON.stringify(newItem);\r\n            localStorage.setItem(itemName, stringifiedItem);\r\n            setItem(newItem);\r\n        } catch(error) {\r\n            setError(error);\r\n        }\r\n    };\r\n\r\n    return {\r\n        item,\r\n        saveItem,\r\n        loading,\r\n        error,\r\n    };\r\n}\r\n\r\nexport { useLocalStorage };","import React from \"react\";\r\nimport './TodoCounter.css';\r\nimport {TodoContext} from \"../TodoContext\";\r\n\r\nfunction TodoCounter(){\r\n    const {totalTodos, completedTodos} = React.useContext(TodoContext);\r\n    return (\r\n        <React.Fragment>\r\n            <h1 className=\"TodoCounter\">PA'Q NO SE TE OLVIDE</h1>\r\n            <h3 className=\"TodoCounter\">Has completado {completedTodos} de {totalTodos} tareas</h3>\r\n        </React.Fragment>\r\n\r\n    );\r\n}\r\n\r\nexport {TodoCounter};","import React from \"react\";\r\nimport './TodoSearch.css';\r\nimport {TodoContext} from \"../TodoContext\";\r\n\r\nfunction TodoSearch(){\r\n    const {searchValue, setSearchValue} = React.useContext(TodoContext);\r\n\r\n    const onSearchValueChange = (event) =>{\r\n        setSearchValue(event.target.value);\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n          <input\r\n              className={\"TodoSearch\"} placeholder={\"... buscar ...\"}\r\n              value={searchValue}\r\n              onChange={onSearchValueChange}\r\n          />\r\n      </React.Fragment>\r\n    );\r\n}\r\n\r\nexport { TodoSearch };","import React from \"react\";\r\nimport './TodoList.css';\r\n\r\nfunction TodoList(props){\r\n    return(\r\n        <section>\r\n            <ul>\r\n                {props.children}\r\n            </ul>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport { TodoList };","import React from 'react';\r\nimport './TodoItem.css';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nfunction TodoItem(props) {\r\n    const onComplete = () => {\r\n        props.onComplete(props.todo);\r\n    }\r\n    const onDelete = () => {\r\n        props.onDelete(props.todo);\r\n    }\r\n    return (\r\n        <li className=\"TodoItem\">\r\n            <input className={'TodoItem-check'} type={\"checkbox\"} checked={props.todo.completed} value={props.todo.completed} onChange={onComplete}/>\r\n            <p className={`TodoItem-p ${props.todo.completed && 'TodoItem-p--complete'}`}>\r\n                    {props.todo.text}\r\n                </p>\r\n            <IconButton aria-label=\"delete\" className=\"Icon-delete\" onClick={onDelete}>\r\n                <DeleteIcon />\r\n            </IconButton>\r\n\r\n        </li>\r\n    );\r\n}\r\n\r\nexport {TodoItem};","import React from \"react\";\r\nimport './CreateTodoButton.css';\r\n\r\nfunction CreateTodoButton(props){\r\n    const onClickButton = () => {\r\n        props.setOpenModal(prevState => !prevState);\r\n    }\r\n    return(\r\n        <button\r\n            className={\"CreateTodoButton\"}\r\n            onClick={onClickButton}\r\n        >+</button>\r\n    );\r\n}\r\n\r\nexport { CreateTodoButton }","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Modal.css';\r\n\r\nfunction Modal({ children }) {\r\n    return ReactDOM.createPortal(\r\n        <div className=\"ModalBackground\">\r\n            {children}\r\n        </div>,\r\n        document.getElementById('modal')\r\n    );\r\n}\r\n\r\nexport { Modal };","import React from \"react\";\r\nimport {TodoContext} from \"../TodoContext\";\r\nimport './Form.css';\r\n\r\nfunction TodoForm() {\r\n    const [newTodoValue, setNewTodoValue] = React.useState('');\r\n    const {addTodo, setOpenModal} = React.useContext(TodoContext);\r\n\r\n    const onCancel = () => {\r\n        setOpenModal(false);\r\n    };\r\n\r\n    const onSubmit = (event) => {\r\n        event.preventDefault();\r\n        addTodo(newTodoValue);\r\n        setOpenModal(false);\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        setNewTodoValue(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <form className={'Form'} onSubmit={onSubmit}>\r\n            <label className={'Instructions'}>Escribe un nuevo todo</label>\r\n            <br/>\r\n            <textarea\r\n                placeholder={'Nueva tarea'}\r\n                value={newTodoValue}\r\n                onChange={onChange}\r\n                rows={5}\r\n            />\r\n            <div className={\"botonera\"}>\r\n                <button type={\"button\"}\r\n                        onClick={onCancel}\r\n                >\r\n                    Cancelar\r\n                </button>\r\n                <button type={\"submit\"}\r\n\r\n                >\r\n                    Añadir\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport {TodoForm}","import React from \"react\"\r\nimport ContentLoader from \"react-content-loader\"\r\n\r\nconst MyLoader = (props) => (\r\n    <ContentLoader\r\n        speed={4}\r\n        width={600}\r\n        height={160}\r\n        viewBox=\"0 0 650 160\"\r\n        backgroundColor=\"#cae9ff\"\r\n        foregroundColor=\"#1b4965\"\r\n        {...props}\r\n    >\r\n\r\n        {/* Check */}\r\n        <rect x=\"24\" y=\"28\" rx=\"0\" ry=\"0\" width=\"24\" height=\"24\" />\r\n        {/* Texto */}\r\n        <rect x=\"72\" y=\"28\" rx=\"0\" ry=\"0\" width=\"600\" height=\"24\" />\r\n        {/* Check */}\r\n        <rect x=\"24\" y=\"78\" rx=\"0\" ry=\"0\" width=\"24\" height=\"24\" />\r\n        {/* Texto */}\r\n        <rect x=\"72\" y=\"78\" rx=\"0\" ry=\"0\" width=\"600\" height=\"24\" />\r\n        {/* Check */}\r\n        <rect x=\"24\" y=\"128\" rx=\"0\" ry=\"0\" width=\"24\" height=\"24\" />\r\n        {/* Texto */}\r\n        <rect x=\"72\" y=\"128\" rx=\"0\" ry=\"0\" width=\"600\" height=\"24\" />\r\n\r\n    </ContentLoader>\r\n)\r\n\r\nexport {MyLoader}\r\n","import React from 'react';\r\nimport {TodoContext} from '../TodoContext';\r\nimport {TodoCounter} from '../TodoCounter';\r\nimport {TodoSearch} from '../TodoSearch';\r\nimport {TodoList} from '../TodoList';\r\nimport {TodoItem} from '../TodoItem';\r\nimport {CreateTodoButton} from '../CreateTodoButton';\r\nimport {Modal} from '../Modal';\r\nimport {TodoForm} from \"../Form\";\r\nimport './Container.css'\r\nimport {MyLoader} from \"../Loading/MyLoader\";\r\n\r\nfunction AppUI() {\r\n    return (\r\n        <div className={'Container'}>\r\n            <TodoCounter/>\r\n            <TodoSearch/>\r\n            <TodoContext.Consumer>\r\n                {({\r\n                      error,\r\n                      loading,\r\n                      searchedTodos,\r\n                      completeTodo,\r\n                      deleteTodo,\r\n                      openModal,\r\n                      setOpenModal\r\n                  }) => (\r\n                    <React.Fragment>\r\n                        <TodoList>\r\n                            {error && <p>Desespérate, hubo un error...</p>}\r\n                            {loading && <MyLoader />}\r\n                            {(!loading && !searchedTodos.length) && <p>¡Crea tu primer TODO!</p>}\r\n\r\n                            {searchedTodos.map(todo => (\r\n                                <TodoItem\r\n                                    key={todo.text}\r\n                                    todo={todo}\r\n                                    completed={todo.completed}\r\n                                    onComplete={() => completeTodo(todo)}\r\n                                    onDelete={() => deleteTodo(todo)}\r\n                                />\r\n                            ))}\r\n                        </TodoList>\r\n                        {\r\n                            openModal &&\r\n                            <Modal>\r\n                                <TodoForm/>\r\n                            </Modal>\r\n                        }\r\n                        <CreateTodoButton\r\n                            setOpenModal = {setOpenModal}\r\n                        />\r\n                    </React.Fragment>\r\n\r\n                )}\r\n            </TodoContext.Consumer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {AppUI};","import React from 'react';\nimport { TodoProvider } from '../TodoContext';\nimport { AppUI } from './AppUI';\n\n\nfunction App() {\n    return (\n        <TodoProvider>\n            <AppUI />\n        </TodoProvider>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/index.js';\nimport './index.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\nReactDOM.createPortal(\n  <App />,\n  document.getElementById('modal')\n);"],"sourceRoot":""}